{"version":3,"sources":["./src/app/app.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/nav-menu/nav-menu.component.html","./src/app/registration/registration.component.html","./src/app/task-detail/task-detail.component.html","./src/app/task-list/task-list.component.html","./src/app/task-new/task-new.component.html","./src/app/task-update/addComment.html","./src/app/task-update/task-update.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/guards/authentication.guard.ts","./src/app/core/services/application.service.ts","./src/app/core/services/http-request-interceptor.ts","./src/app/core/services/security.service.ts","./src/app/core/services/token.service.ts","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/nav-menu/nav-menu.component.ts","./src/app/registration/registration.component.css","./src/app/registration/registration.component.ts","./src/app/service/comment.service.ts","./src/app/service/task.service.ts","./src/app/task-detail/task-detail.component.ts","./src/app/task-list/task-list.component.ts","./src/app/task-new/task-new.component.ts","./src/app/task-update/task-update.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<body>\\n    <app-nav-menu></app-nav-menu>\\n\\n    <div class=\\\"container\\\">\\n\\n        <router-outlet></router-outlet>\\n\\n    </div>\\n\\n</body>\\n\"","export default \"<h1>Tema 4 - Angular</h1>\\n<p>Welcome to your new single-page application, built with:</p>\\n<ul>\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\n</ul>\\n<p>To help you get started, we've also set up:</p>\\n<ul>\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\n</ul>\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\n\"","export default \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Log in</mat-card-title>\\n    </mat-card-header>\\n\\n    <form class=\\\"example-form\\\">\\n        <mat-card-content>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"loginModel.email\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"loginModel.password\\\">\\n            </mat-form-field>\\n        </mat-card-content>\\n        <button mat-stroked-button color=\\\"accent\\\" class=\\\"btn-block\\\" (click)=\\\"loginUser()\\\">Log in</button>\\n    </form>\\n</mat-card>\\n\"","export default \"<header>\\r\\n    <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">NetCoreAngularApp2</a>\\r\\n            <button class=\\\"navbar-toggler\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    data-toggle=\\\"collapse\\\"\\r\\n                    data-target=\\\".navbar-collapse\\\"\\r\\n                    aria-label=\\\"Toggle navigation\\\"\\r\\n                    [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n                    (click)=\\\"toggle()\\\">\\r\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n                 [ngClass]=\\\"{ show: isExpanded }\\\">\\r\\n                <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n\\r\\n                    <li class=\\\"nav-item\\\"\\r\\n                        [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n                    </li>\\r\\n\\r\\n                    <li class=\\\"nav-item\\\"\\r\\n                        [routerLinkActive]=\\\"['link-active']\\\"\\r\\n                        [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/task-list']\\\">Task list</a>\\r\\n                    </li>\\r\\n\\r\\n                    <li class=\\\"nav-item\\\"\\r\\n                        [routerLinkActive]=\\\"['link-active']\\\"\\r\\n                        [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n                    </li>\\r\\n\\r\\n                    <li class=\\\"nav-item\\\"\\r\\n                        [routerLinkActive]=\\\"['link-active']\\\"\\r\\n                        [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/registration']\\\">Registration</a>\\r\\n                    </li>\\r\\n\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n\"","export default \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Register</mat-card-title>\\n    </mat-card-header>\\n\\n    <form class=\\\"example-form\\\">\\n\\n        <mat-card-content>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"registerModel.email\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"registerModel.password\\\">\\n            </mat-form-field>\\n\\n        </mat-card-content>\\n\\n        <button mat-stroked-button color=\\\"accent\\\" class=\\\"btn-block\\\" (click)=\\\"registerUser()\\\">Register</button>\\n\\n    </form>\\n</mat-card>\\n\"","export default \"<p *ngIf=\\\"!task\\\"><em>Loading error..</em></p>\\r\\n<p *ngIf=\\\"(isClicked | async) === false \\\"><em>CLICKED</em></p>\\r\\n\\r\\n<div *ngIf=\\\"task\\\">\\r\\n    <table class='table table-striped' aria-labelledby=\\\"tableLabel\\\">\\r\\n        <tr>\\r\\n            <th>Id</th>\\r\\n            <td>{{ task.id }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <th>Title</th>\\r\\n            <td>{{ task.title }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <th>Description</th>\\r\\n            <td>{{ task.description }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <th>Date added</th>\\r\\n            <td>{{ task.dateAdded | date:'yyyy-MM-dd HH:mm:ss' }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <th>Date deadline</th>\\r\\n            <td>{{ task.dateDeadline | date:'yyyy-MM-dd HH:mm:ss' }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <th>Importance</th>\\r\\n            <td>{{ task.importance }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <th>Status</th>\\r\\n            <td>{{ task.status }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <th>Date closure</th>\\r\\n            <td>{{ task.dateClosure | date:'yyyy-MM-dd HH:mm:ss' }}</td>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\r\\n    <h2>Comments </h2>\\r\\n    <table mat-table [dataSource]=\\\"task.comments\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <!-- Text Column -->\\r\\n        <\\r\\n        <ng-container matColumnDef=\\\"text\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef style=\\\"width:30%\\\"> Text </th>\\r\\n            <td mat-cell *matCellDef=\\\"let comment\\\"> {{comment.text}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Important Column -->\\r\\n        <ng-container matColumnDef=\\\"important\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef style=\\\"width:30%\\\"> Important </th>\\r\\n            <td mat-cell *matCellDef=\\\"let comment\\\"> {{ comment.important }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Action Column -->\\r\\n        <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef style=\\\"width:30%\\\"> Action </th>\\r\\n            <td mat-cell *matCellDef=\\\"let comment\\\">\\r\\n\\r\\n                <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                    <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deleteComment(comment.id);$event.stopPropagation()\\\">delete</mat-icon>\\r\\n                </button>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <button (click)=\\\"goBack()\\\">Back</button>\\r\\n</div>\\r\\n\"","export default \"<h1 id=\\\"tableLabel\\\">List of tasks</h1>\\r\\n\\r\\n<a routerLink=\\\"/task-new\\\" routerLinkActive=\\\"active\\\"> Add Task </a>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!tasks\\\"><em>No existent tasks</em></p>\\r\\n\\r\\n<div *ngIf=\\\"tasks\\\">\\r\\n    <div>\\r\\n        <span>Filter by deadline </span>\\r\\n        <label>\\r\\n            from\\r\\n            <input #fromDate type=\\\"date\\\">\\r\\n            <input #fromTime type=\\\"time\\\">\\r\\n        </label>\\r\\n        <label>\\r\\n             to\\r\\n            <input #toDate type=\\\"date\\\">\\r\\n            <input #toTime type=\\\"time\\\">\\r\\n        </label>\\r\\n        <button (click)=\\\"filterDate(fromDate.value,fromTime.value,toDate.value,toTime.value)\\\" type=\\\"button\\\"> <i class=\\\"fa fa-filter\\\" aria-hidden=\\\"true\\\"> Filter </i></button>\\r\\n    </div>\\r\\n    <table class='table table-striped' aria-labelledby=\\\"tableLabel\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>id</th>\\r\\n                <th>Title</th>\\r\\n                <th>Description</th>\\r\\n                <th>Date added</th>\\r\\n                <th>Date deadline</th>\\r\\n                <th>Importance</th>\\r\\n                <th>Status</th>\\r\\n                <th>Date closure</th>\\r\\n                <th>No of comments</th>\\r\\n                <div *ngIf=\\\"userLogged\\\">\\r\\n                    <th>Operations</th>\\r\\n                </div>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let task of tasks\\\"\\r\\n                [ngClass]=\\\"{ 'selected': task === selectedTask }\\\"\\r\\n                (click)=\\\"onSelect(task)\\\">\\r\\n                <td>{{ task.id }}</td>\\r\\n                <td>{{ task.title }}</td>\\r\\n                <td>{{ task.description }}</td>\\r\\n                <td>{{ task.dateAdded | date:'yyyy-MM-dd HH:mm:ss' }}</td>\\r\\n                <td>{{ task.dateDeadline | date:'yyyy-MM-dd HH:mm:ss' }}</td>\\r\\n                <td>{{ task.importance }}</td>\\r\\n                <td>{{ task.status }}</td>\\r\\n                <td>{{ task.dateClosure | date:'yyyy-MM-dd HH:mm:ss' }}</td>\\r\\n                <td>{{ task.numberOfComments }}</td>\\r\\n                <div *ngIf=\\\"userLogged\\\">\\r\\n                    <td>\\r\\n                        <button (click)=\\\"gotoDetail(task)\\\"><i class=\\\"fas fa-info\\\">Details</i></button>\\r\\n                        <button (click)=\\\"deleteTask(task);$event.stopPropagation()\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\">Delete</i></button>\\r\\n                        <button (click)=\\\"updateTask(task);$event.stopPropagation()\\\"><i class=\\\"fas fa-pen\\\" aria-hidden=\\\"true\\\">Update</i></button>\\r\\n                    </td>\\r\\n                </div>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\"","export default \"<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\">\\r\\n\\r\\n    <tr>\\r\\n        <th>Title</th>\\r\\n        <td>\\r\\n            <input #title>\\r\\n            <span *ngIf=\\\"errorMessages.Title\\\" class=\\\"text-danger\\\"><small>{{errorMessages.Title}}</small></span>\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>Description</th>\\r\\n        <td>\\r\\n            <input #description>\\r\\n            <span *ngIf=\\\"errorMessages.Description\\\" class=\\\"text-danger\\\"><small>{{errorMessages.Description}}</small></span>\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>Date deadline</th>\\r\\n        <td>\\r\\n            <input #dateDeadline type=\\\"date\\\"><input #timeDeadline type=\\\"time\\\">\\r\\n            <span *ngIf=\\\"errorMessages.DateDeadline\\\" class=\\\"text-danger\\\"><small>{{errorMessages.DateDeadline}}</small></span>\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>Importance</th>\\r\\n        <td>\\r\\n            <select [(ngModel)]=\\\"importance\\\">\\r\\n                <option value=\\\"low\\\">Low</option>\\r\\n                <option value=\\\"medium\\\">Medium</option>\\r\\n                <option value=\\\"high\\\">High</option>\\r\\n            </select>\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>Status</th>\\r\\n        <td>\\r\\n            <select [(ngModel)]=\\\"status\\\">\\r\\n                <option value=\\\"open\\\">Open</option>\\r\\n                <option value=\\\"in_progress\\\">In progress</option>\\r\\n                <option value=\\\"closed\\\">Closed</option>\\r\\n            </select>\\r\\n        </td>\\r\\n    </tr>\\r\\n</table>\\r\\n<button (click)=\\\"save(title.value,description.value, dateDeadline.value,timeDeadline.value,importance,status)\\\">SAVE</button>\\r\\n<button (click)=\\\"goBack()\\\">BACK</button>\\r\\n\"","export default \"<h1 mat-dialog-title>Add comment</h1>\\r\\n<div mat-dialog-content>\\r\\n    <mat-form-field appearance=\\\"fill\\\">\\r\\n        <mat-label>Text</mat-label>\\r\\n        <input matInput placeholder=\\\"Add text\\\" #text>\\r\\n        <mat-error *ngIf=\\\"errorMessagesComment.Text\\\" class=\\\"text-danger\\\"><small>{{errorMessagesComment.Text}}</small></mat-error>\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field>\\r\\n        <mat-label>Important</mat-label>\\r\\n        <mat-select #important>\\r\\n            <mat-option value=\\\"true\\\">Yes</mat-option>\\r\\n            <mat-option value=\\\"false\\\">No</mat-option>\\r\\n        </mat-select>\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n    <button mat-button (click)=\\\"saveComment(text.value, important.value)\\\">Save</button>\\r\\n</div>\\r\\n\"","export default \"<p *ngIf=\\\"!task\\\"><em>Loading error..</em></p>\\r\\n\\r\\n<form class=\\\"form-horizontal\\\" role=\\\"form\\\" [formGroup]=\\\"updateForm\\\" *ngIf=\\\"this.updateForm\\\" (ngSubmit)=\\\"onFormSubmit()\\\">\\r\\n    <fieldset>\\r\\n        <legend>\\r\\n            Update:\\r\\n            <strong>Entry no. {{ task.id }} </strong>\\r\\n        </legend>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Title</label>\\r\\n                <input type=\\\"text\\\"\\r\\n                       required name=\\\"title\\\" placeholder=\\\"Enter title\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\">\\r\\n                <span *ngIf=\\\"errorMessages.title\\\" class=\\\"text-danger\\\"><small>{{errorMessages.Title }}</small></span>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Description</label>\\r\\n                <input type=\\\"text\\\"\\r\\n                       required name=\\\"description\\\" placeholder=\\\"Enter description\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\">\\r\\n                <span *ngIf=\\\"errorMessages.Description\\\" class=\\\"text-danger\\\"><small>{{errorMessages.Description}}</small></span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Date Deadline</label>\\r\\n                <input type=\\\"datetime-local\\\"\\r\\n                       name=\\\"dateDeadline\\\" class=\\\"form-control\\\" formControlName=\\\"dateDeadline\\\">\\r\\n                <span *ngIf=\\\"errorMessages.DateDeadline\\\" class=\\\"text-danger\\\"><small>{{errorMessages.DateDeadline }}</small></span>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"input-group mt-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Importance</label>\\r\\n            </div>\\r\\n            <select class=\\\"custom-select\\\" name=\\\"importance\\\" formControlName=\\\"importance\\\">\\r\\n                <option *ngFor=\\\"let importance of importanceList\\\" [ngValue]=\\\"importance.value\\\">{{importance.name}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"input-group mt-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Status</label>\\r\\n            </div>\\r\\n            <select class=\\\"form-control\\\" name=\\\"status\\\" formControlName=\\\"status\\\">\\r\\n                <option *ngFor=\\\"let status of statusList\\\" [ngValue]=\\\"status.value\\\">\\r\\n                    {{status.name}}\\r\\n                </option>\\r\\n            </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n                <div class=\\\"pull-right\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin: 4px;\\\">UPDATE</button>\\r\\n                    <button class=\\\"btn btn-secondary\\\" (click)=\\\"goBack()\\\" style=\\\"margin: 4px;\\\">BACK</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </fieldset>\\r\\n</form>\\r\\n\\r\\n<button mat-raised-button (click)=\\\"openDialog(task.id)\\\">Add comment</button>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CoreModule } from './core/core.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { TaskListComponent } from './task-list/task-list.component';\r\nimport { TaskService } from './service/task.service';\r\nimport { TaskDetailComponent } from './task-detail/task-detail.component';\r\nimport { TaskNewComponent } from './task-new/task-new.component';\r\nimport { TaskUpdateComponent } from './task-update/task-update.component';\r\nimport { AddcommentComponent } from './task-update/task-update.component';\r\n\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommentService } from './service/comment.service';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        HomeComponent,\r\n        TaskListComponent,\r\n        TaskDetailComponent,\r\n        TaskNewComponent,\r\n        TaskUpdateComponent,\r\n        AddcommentComponent,\r\n        RegistrationComponent,\r\n        LoginComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n        HttpClientModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatSliderModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatListModule,\r\n        MatGridListModule,\r\n        BrowserAnimationsModule,\r\n        MatTooltipModule,\r\n        MatIconModule,\r\n        RouterModule.forRoot([\r\n            { path: '', component: HomeComponent, pathMatch: 'full' },\r\n            { path: 'task-list', component: TaskListComponent },\r\n            { path: 'task-detail/:id', component: TaskDetailComponent },\r\n            { path: 'task-new', component: TaskNewComponent },\r\n            {\r\n                path: 'task-update/:id', component: TaskUpdateComponent,\r\n                children: [\r\n                    { path: '', component: AddcommentComponent }\r\n                ]\r\n            },\r\n            //{ path: 'task-update/:id', component: AddcommentComponent },\r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'registration', component: RegistrationComponent }\r\n        ]),\r\n    ],\r\n    exports: [CoreModule, MatDialogModule, MatFormFieldModule, MatButtonModule, MatInputModule, MatSelectModule, MatTableModule, MatSortModule, MatTooltipModule, MatIconModule],\r\n    providers: [TaskService, CommentService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthenticationGuard } from './guards/authentication.guard';\n\nimport { HttpRequestInterceptor } from './services/http-request-interceptor';\n\nimport { SecurityService } from './services/security.service';\nimport { TokenService } from './services/token.service';\nimport { ApplicationService } from './services/application.service';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [],\n    providers: [\n        AuthenticationGuard,\n        SecurityService,\n        TokenService,\n        ApplicationService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: HttpRequestInterceptor,\n            multi: true\n        }\n    ],\n    exports: []\n})\n\nexport class CoreModule {\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n    constructor() { }\n\n    canActivate() {\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { TokenService } from './token.service';\n\n@Injectable()\nexport class ApplicationService {\n\n    public baseUrl: string;\n\n    constructor(private tokenService: TokenService) {\n        this.baseUrl = document.getElementsByTagName('base')[0].href;\n    }\n\n    isLoggedIn() {\n        return this.tokenService.getToken() != null;\n    }\n\n    userEmail() {\n        var token = this.tokenService.getToken();\n\n        if (token != null)\n            return token.email;\n\n        return \"\";\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { TokenService } from './token.service';\r\nimport { Token } from './security.models';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private tokenService: TokenService\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        var token: Token = this.tokenService.getToken();\r\n\r\n        request = token ? request.clone(\r\n            {\r\n                headers: request.headers.set(\"Authorization\", \"Bearer \" + token.value)\r\n            }\r\n        ) : request;\r\n\r\n        return next.handle(request).pipe(\r\n            catchError(\r\n                (error: HttpErrorResponse, caught: Observable<HttpEvent<HttpErrorResponse>>) => {\r\n                    if (error.error instanceof ErrorEvent) {\r\n                        if (error.status === 401) {\r\n                            this.router.navigate(['/login']);\r\n                            return of<HttpEvent<HttpErrorResponse>>();\r\n                        }\r\n\r\n                        if (error.status === 403) {\r\n                            this.router.navigate(['/forbidden']);\r\n                            return of<HttpEvent<HttpErrorResponse>>();\r\n                        }\r\n\r\n                    }\r\n                    return throwError(error.error.errors);\r\n                }\r\n            )\r\n        );\r\n    }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observer, Observable } from 'rxjs';\n\nimport { Token, RegisterModel, LoginModel } from './security.models';\nimport { TokenService } from './token.service';\nimport { ApplicationService } from './application.service';\n\n@Injectable()\nexport class SecurityService {\n\n    constructor(\n        private httpClient: HttpClient,\n        private tokenService: TokenService,\n        private applicationService: ApplicationService) {\n    }\n\n    register(registerModel: RegisterModel) {\n        return new Observable<Token>((obs: Observer<Token>) => {\n            this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Register`, registerModel).subscribe(token => {\n\n                this.tokenService.saveToken(token);\n\n                obs.next(token);\n                obs.complete();\n            });\n        });\n    }\n\n    login(loginModel: LoginModel) {\n        return new Observable<Token>((obs: Observer<Token>) => {\n            this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Login`, loginModel).subscribe(token => {\n\n                this.tokenService.saveToken(token);\n\n                obs.next(token);\n                obs.complete();\n            });\n        });\n    }\n\n    logout() {\n        this.tokenService.deleteToken();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Token } from './security.models';\n\n@Injectable()\nexport class TokenService {\n\n    constructor() { }\n\n    saveToken(token: Token) {\n        localStorage.setItem(\"token\", JSON.stringify(token));\n    }\n\n    getToken(): Token | null {\n        return this.validate(JSON.parse(localStorage.getItem(\"token\") as string));\n    }\n\n    validate(token: Token | null): Token | null {\n        if (token) {\n            if (new Date(token.expiry) > new Date())\n                return token;\n        }\n\n        return null;\n    }\n\n    deleteToken() {\n        localStorage.removeItem(\"token\");\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SecurityService } from '../core/services/security.service';\nimport { LoginModel } from '../core/services/security.models';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    public loginModel: LoginModel = <LoginModel>{};\n\n    constructor(private securityService: SecurityService, private router: Router) {\n    }\n\n    ngOnInit() {\n    }\n\n    loginUser() {\n        this.securityService.login(this.loginModel).subscribe(token => {\n            this.router.navigate(['/fetch-data']);\n        });\n    }\n}\n","export default \"a.navbar-brand {\\n  white-space: normal;\\n  text-align: center;\\n  word-break: break-all;\\n}\\n\\nhtml {\\n  font-size: 14px;\\n}\\n\\n@media (min-width: 768px) {\\n  html {\\n    font-size: 16px;\\n  }\\n}\\n\\n.box-shadow {\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG59XG5cbi5ib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SecurityService } from '../core/services/security.service';\nimport { RegisterModel } from '../core/services/security.models';\n\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n    public registerModel: RegisterModel = <RegisterModel>{};\n\n    constructor(private securityService: SecurityService, private router: Router) {\n    }\n\n    ngOnInit() {\n    }\n\n    registerUser() {\n        this.securityService.register(this.registerModel).subscribe(token => {\n            this.router.navigate(['/task-list']);\n        });\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CommentService {\r\n\r\n    constructor(private httpClient: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    }\r\n\r\n    getComments(): Observable<Array<Comment>> {\r\n        return this.httpClient\r\n            .get<Array<Comment>>(this.baseUrl + 'api/comments');\r\n    }\r\n\r\n    getComment(id: number): Observable<Comment> {\r\n        return this.httpClient\r\n            .get<Comment>(`${this.baseUrl}api/comments/${id}`);\r\n    }\r\n\r\n    saveComment(comment: Comment): Observable<Comment> {\r\n        //console.log(task);\r\n        return this.httpClient\r\n            .post<Comment>(`${this.baseUrl}api/comments`, comment);\r\n    }\r\n\r\n    updateComment(comment: Comment): Observable<Comment> {\r\n        return this.httpClient\r\n            .put<Comment>(`${this.baseUrl}api/comments/${comment.id}`, comment);\r\n    }\r\n\r\n    deleteComment(id: number): Observable<any> {\r\n        return this.httpClient\r\n            .delete<Comment>(`${this.baseUrl}api/comments/${id}`);\r\n    }\r\n}\r\n\r\nexport interface Comment {\r\n    id: number;\r\n    text: string;\r\n    important: string;\r\n    taskid: number;\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClientModule, HttpClient } from \"@angular/common/http\";\r\nimport 'rxjs-compat';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n\r\n    constructor(private httpClient: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    }\r\n\r\n    getTasks(): Observable<Array<TaskItem>> {\r\n        return this.httpClient\r\n            .get<Array<TaskItem>>(this.baseUrl + 'api/taskitems');\r\n    }\r\n\r\n    getTask(id: number): Observable<TaskItem> {\r\n        return this.httpClient\r\n            .get<TaskItem>(`${this.baseUrl}api/taskitems/${id}`\r\n        );\r\n    }\r\n\r\n    save(task: TaskItem): Observable<TaskItem> {\r\n        return this.httpClient\r\n            .post<TaskItem>(`${this.baseUrl}api/taskitems`, task);\r\n    }\r\n\r\n    update(task: TaskItem): Observable<TaskItem> {\r\n        return this.httpClient\r\n            .put<TaskItem>(`${this.baseUrl}api/taskitems/${task.id}`, task);\r\n    }\r\n\r\n    delete(id: number): Observable<any> {\r\n        return this.httpClient\r\n            .delete<TaskItem>(`${this.baseUrl}api/taskitems/${id}`);\r\n    }\r\n\r\n    filter(fromDate: string, toDate: string): Observable<Array<TaskItem>>{\r\n        if (!fromDate) fromDate = \"\";\r\n        if (!toDate) toDate = \"\";\r\n        return this.httpClient.get<Array<TaskItem>>(`${this.baseUrl}api/taskitems?from=${fromDate}&to=${toDate}`);\r\n    }\r\n}\r\n\r\nexport interface TaskItem {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    dateAdded: string;\r\n    dateDeadline: string;\r\n    importance: ImportanceList;\r\n    status: StatusList;\r\n    dateClosure: string;\r\n    comments: Comment[];\r\n}\r\n\r\nexport enum ImportanceList { low = 0, medium = 1, high = 2 }\r\n\r\nexport enum StatusList { open = 0, in_progress = 1, closed = 2 }\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { TaskItem } from '../service/task.service';\r\nimport { TaskService } from '../service/task.service';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { MatSortModule, MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CommentService } from '../service/comment.service';\r\nimport { Comment } from '@angular/compiler';\r\n\r\n@Component({\r\n    selector: 'app-task-detail',\r\n    templateUrl: './task-detail.component.html'\r\n})\r\n/** task-detail component*/\r\nexport class TaskDetailComponent implements OnInit {\r\n\r\n    @Input() task: TaskItem;\r\n    @Input() comment: Comment;\r\n\r\n    constructor(private service: TaskService,\r\n        private commentService: CommentService,\r\n        private route: ActivatedRoute,\r\n        private location: Location) {\r\n    }\r\n\r\n    displayedColumns: string[] = ['text', 'important', 'action'];\r\n\r\n    ngOnInit(): void {\r\n        this.route.params\r\n            .switchMap((params: Params) => this.service.getTask(+params['id']))\r\n            .subscribe(task => this.task = task);\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n\r\n    deleteComment(id: number) {\r\n\r\n        this.commentService.deleteComment(id).subscribe(x => {\r\n            this.goBack();\r\n        });\r\n    }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DatePipe, Time } from '@angular/common';\r\nimport { TaskService } from \"../service/task.service\";\r\nimport { TaskItem } from '../service/task.service';\r\nimport { error } from 'protractor';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-task-list',\r\n    templateUrl: './task-list.component.html'\r\n})\r\n\r\nexport class TaskListComponent implements OnInit {\r\n    tasks: Array<TaskItem>;\r\n    selectedTask: TaskItem;\r\n    errorMessage: string;\r\n    userLogged: boolean = false ;\r\n    isClicked: BehaviorSubject<boolean>;\r\n\r\n    constructor(private service: TaskService, private router: Router) {\r\n        this.isClicked = new BehaviorSubject<boolean>(false);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getTasks();\r\n        this.userLogged = !!localStorage.getItem('token');\r\n        console.log(this.userLogged);\r\n    }\r\n\r\n    getTasks() {\r\n        this.service.getTasks()\r\n            .subscribe(\r\n                tasks => this.tasks = tasks,\r\n                error => this.errorMessage = <any>error\r\n            );\r\n    }\r\n\r\n    onSelect(task: TaskItem): void {\r\n        this.selectedTask = task;\r\n    }\r\n\r\n    gotoDetail(task: TaskItem): void {\r\n        console.log(this.isClicked);\r\n        this.router.navigate(['task-detail', task.id]);\r\n    }\r\n\r\n    updateTask(task: TaskItem): void {\r\n        //this.updateSelected();\r\n        //console.log(this.isClicked);\r\n        //this.router.navigate(['task-detail', task.id]);\r\n        this.router.navigate(['task-update', task.id]);\r\n    }\r\n\r\n    updateSelected() {\r\n        this.isClicked.next(true);\r\n    }\r\n\r\n    deleteTask(task: TaskItem) {\r\n        this.service.delete(task.id)\r\n            .subscribe(_ => {\r\n                this.getTasks(),\r\n                console.log(\"Task deleted\"),\r\n                error => this.errorMessage = <any>error;\r\n            });\r\n    }\r\n\r\n    filterDate(fromDate: Date, fromTime: Time, toDate: Date, toTime: Time) {\r\n        var fromDateTime, toDateTime;\r\n        if (fromDate) {\r\n            fromDateTime = fromDate;\r\n            if (fromTime) {\r\n                fromDateTime = `${fromDateTime}T${fromTime}`;\r\n            }\r\n        }\r\n        if (toDate) {\r\n            toDateTime = toDate;\r\n            if (toTime) {\r\n                toDateTime = `${toDateTime}T${toTime}`;\r\n            }\r\n        }\r\n        this.service.filter(fromDateTime, toDateTime)\r\n            .subscribe(tasks => this.tasks = tasks);\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Params, ActivatedRoute } from '@angular/router';\r\nimport { TaskService } from '../service/task.service';\r\nimport { TaskItem } from '../service/task.service';\r\nimport { Location } from '@angular/common';\r\nimport { ValidationError } from '../core/core.models';\r\n\r\n@Component({\r\n    selector: 'app-task-new',\r\n    templateUrl: './task-new.component.html'\r\n})\r\n\r\nexport class TaskNewComponent implements OnInit {\r\n\r\n    @Input() task: TaskItem;\r\n    private errorMessages = [];\r\n\r\n    constructor(private service: TaskService,\r\n        private location: Location) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    save(title, description, datedDeadline, timeDeadline, importance, status) {\r\n        const id = 0;\r\n        const dateAdded = null;\r\n        const dateClosure = null;\r\n        var comments = new Array<Comment>()\r\n        var dateDeadline;\r\n        if (datedDeadline) {\r\n            dateDeadline = datedDeadline;\r\n            if (timeDeadline) {\r\n                dateDeadline = `${datedDeadline}T${timeDeadline}`;\r\n            }\r\n        }\r\n        this.service.save({\r\n            id, title, description, dateAdded, dateDeadline, importance, status, dateClosure, comments\r\n        }).subscribe(\r\n            (err) => {\r\n                console.log(\"Err in saving client: \", err);\r\n                console.log(err);\r\n                //this.errorMessages.push(err);\r\n            },\r\n            () => console.log(\"completed\")\r\n        );\r\n    }\r\n\r\n    goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { TaskService, TaskItem, ImportanceList, StatusList } from '../service/task.service';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Comment, CommentService } from '../service/comment.service';\r\n\r\n@Component({\r\n    selector: 'app-task-update',\r\n    templateUrl: './task-update.component.html',\r\n})\r\n/** task-update component*/\r\nexport class TaskUpdateComponent implements OnInit {\r\n\r\n    @Input() task: TaskItem;\r\n\r\n    public updateForm: FormGroup;\r\n\r\n    private errorMessagesTask = [];\r\n\r\n    public importanceList = [\r\n        { value: 0, name: \"low\" },\r\n        { value: 1, name: \"medium\" },\r\n        { value: 2, name: \"high\" }];\r\n\r\n    public statusList = [\r\n        { value: 0, name: \"open\" },\r\n        { value: 1, name: \"in progress\" },\r\n        { value: 2, name: \"closed\" }];\r\n\r\n    public errorMessages = <any>[];\r\n\r\n    constructor(private service: TaskService,\r\n        private route: ActivatedRoute,\r\n        private location: Location,\r\n        public dialog: MatDialog) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.route.params\r\n            .switchMap((params: Params) => this.service.getTask(+params['id']))\r\n            .subscribe(task => {\r\n                this.task = task;\r\n                this.initializeFormControls();\r\n            });\r\n    }\r\n\r\n    initializeFormControls(): void {\r\n        this.updateForm = new FormGroup({\r\n            id: new FormControl(this.task.id, Validators.required),\r\n            title: new FormControl(this.task.title, Validators.required),\r\n            description: new FormControl(this.task.description, Validators.required),\r\n            dateAdded: new FormControl(this.task.dateAdded),\r\n            dateDeadline: new FormControl(this.task.dateDeadline),\r\n            importance: new FormControl((this.task.importance)),\r\n            status: new FormControl(this.task.status),\r\n            dateClosure: new FormControl(this.task.dateClosure),\r\n        })\r\n    }\r\n\r\n    goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n    onFormSubmit() {\r\n        console.log(this.updateForm.value);\r\n        this.service.update(this.updateForm.value)\r\n            .subscribe(\r\n                () => console.log('Task update complete'),\r\n                err => {\r\n                    this.errorMessages = err;\r\n                    console.log(err);\r\n                });\r\n    }\r\n\r\n    openDialog(id: number): void {\r\n\r\n        const dialogConfig = new MatDialogConfig();\r\n\r\n        dialogConfig.disableClose = true;\r\n        dialogConfig.autoFocus = true;\r\n\r\n        dialogConfig.data = {\r\n            dialogTaskId: id\r\n        };\r\n\r\n        const dialogRef = this.dialog.open(AddcommentComponent, dialogConfig\r\n        );\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n        });\r\n\r\n        const dialogSubmitSubscription =\r\n            dialogRef.componentInstance.submitClicked.subscribe(result => {\r\n                dialogSubmitSubscription.unsubscribe();\r\n            });\r\n   \r\n    }\r\n}\r\n\r\ninterface DialogData {\r\n    dialogTaskId: number;\r\n    dialogText: string;\r\n    dialogImportant: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'addComment',\r\n    templateUrl: 'addComment.html',\r\n})\r\n\r\nexport class AddcommentComponent implements OnInit {\r\n\r\n    dialogTaskId: number;\r\n    dialogText: string;\r\n    dialogImportant: boolean;\r\n    @Output() submitClicked = new EventEmitter<any>();\r\n    private errorMessagesComment = [];\r\n\r\n    constructor(\r\n        private service: CommentService,\r\n        public dialogRef: MatDialogRef<AddcommentComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    ngOnInit() {\r\n        this.dialogTaskId = this.data.dialogTaskId;\r\n        console.log(this.dialogTaskId);\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    saveComment(text, important) {\r\n        const id = 0;\r\n        const taskid = this.data.dialogTaskId;\r\n        this.service.saveComment({\r\n            id, text, important, taskid\r\n        }).subscribe(\r\n            () => console.log(\"completed\"),\r\n            (err) => {\r\n                console.log(\"save not possible\");\r\n                this.errorMessagesComment = err;\r\n                console.log(this.errorMessagesComment);\r\n            });\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}